Problem Statement - 5
Write a program that serializes and deserializes a Student class according to the following criteria -

Write a class Student.class with the following properties/fields -
firstName (String)
dateOfBirth (String)
address (represents instance of Address class)
Write a class Address.class with following properties/fields -
city (String)
State (String)
pinCode (Integer)
country (String)
Write appropriate constructors for both Address.class and Student.class classes.
Write a separate class, SerializationTest, that constructs four different Student objects, places them in a List, and then serializes the result to a file specified as command line argument. Run the program twice with different files specified (output1.ser and output2.ser)
Write another program, DeserializationTest, that reads files containing a serialized list of Students created in previous steps and prints the serialized list of Students.. Files to be read are again specified as command line arguments (output1.ser and output2.ser).
Change dateOfBirth type from java.lang.String to java.util.Date and change the constructor implementation accordingly. Don’t change the signature of the constructor. Just use a single parameter constructor of the Date class to assign the passed String Date to “dateOfBirth”.
After recompiling Person, at this point you should verify the following:
If you run DeserializationTest on either output1.ser or output2.ser you should get a runtime exception.
If you run SerializationTest and regenerate output2.ser you will be able to read it back with DeserializationTest, but since output1.ser is in the old format, you won't be able to read that file.
Important - Revise the Student class such that if you rerun SerializationTest to regenerate output2.ser using the new Student format, BUT LEAVE output1.ser IN THE OLD FORMAT, you will still be able to run DeserializationTest for both files as was done before, even though there are two different Student formats.
While implementing this part, you are only allowed to rewrite and recompile only Student class.
